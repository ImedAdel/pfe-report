% Encoding: UTF-8

@book{Bringhurst12,
  title     = {The Elements of Typographic Style},
  publisher = {Hartley \& Marks Publishers},
  year      = {2012},
  author    = {Robert Bringhurst},
  address   = {Vancouver, British Columbia, Canada},
  edition   = {4}
}

@misc{noauthor_macintosh_2010,
  title   = {Macintosh {Product} {Introduction} {Plan}},
  url     = {https://web.archive.org/web/20100721013724/http://library.stanford.edu/mac/primary/docs/pip83.html},
  urldate = {2021-04-01},
  journal = {Stanford University Libraries \& Academic Information Resources},
  month   = jul,
  year    = {2010}
}

@misc{polsson_chronology_2009,
  title   = {Chronology of {Apple} {Computer} {Personal} {Computers} (1984-1985)},
  url     = {https://web.archive.org/web/20090821105822/http://www.islandnet.com/~kpolsson/applehis/appl1984.htm},
  urldate = {2021-04-01},
  author  = {Polsson, Ken},
  month   = aug,
  year    = {2009}
}

@misc{december_2019_what_nodate,
  title      = {What is {SaaS}? {Everything} you need to know about {Software} as a {Service}},
  shorttitle = {What is {SaaS}?},
  url        = {https://www.techradar.com/news/what-is-saas},
  abstract   = {Software as a Service explained},
  language   = {en},
  urldate    = {2021-04-01},
  journal    = {TechRadar},
  author     = {Turner, Brian}
}

@misc{gemayel_how_nodate,
  title    = {How to wireframe},
  url      = {https://www.figma.com/blog/how-to-wireframe/},
  abstract = {Learn when to create a wireframe, what goes into them, and how they can help you communicate and iterate on ideas with your team.},
  language = {en-US},
  urldate  = {2021-06-04},
  journal  = {Figma},
  author   = {Gemayel, Toni}
}

@book{garrett_elements_2011,
  address    = {Berkeley, CA},
  edition    = {2nd ed},
  series     = {Voices that matter},
  title      = {The elements of user experience: user-centered design for the {Web} and beyond},
  isbn       = {9780321683687},
  shorttitle = {The elements of user experience},
  abstract   = {Provides an overview of the complexities of interactive Web design for non-designers, explaining the processes, methods, and vocabulary of user experience design},
  publisher  = {New Riders},
  author     = {Garrett, Jesse James},
  year       = {2011},
  note       = {OCLC: ocn503049598},
  keywords   = {Web sites, Design, Human-computer interaction, Web sites, Design, Human-computer interaction}
}

@misc{noauthor_document_nodate,
  title    = {Document collaboration and co-authoring},
  url      = {https://support.microsoft.com/en-us/office/document-collaboration-and-co-authoring-ee1509b4-1f6e-401e-b04a-782d26f564a4},
  abstract = {Discover the benefits to co-authoring documents in your organization and learn about versioning, checkin/checkout, and mixed Office environments.},
  language = {en-US},
  urldate  = {2021-06-04}
}

@misc{noauthor_firsts:_nodate,
  title    = {Firsts: {The} {Demo} - {Doug} {Engelbart} {Institute}},
  url      = {https://www.dougengelbart.org/content/view/209/448/},
  abstract = {Doug Engelbart's 1968 "Mother of All Demos" - brief background with links to complete video footage, annotated video footage, abridged video footage, 1998 retrospective panel discussion by the original participants, and more},
  urldate  = {2021-06-04}
}

@misc{fried_google_nodate,
  title    = {Google pulls plug on {Google} {Wave}},
  url      = {https://www.cnet.com/news/google-pulls-plug-on-google-wave/},
  abstract = {The search giant says the real-time collaboration tool saw less use than the company had hoped. The company will aim to use technology in other products.},
  language = {en},
  urldate  = {2021-06-04},
  journal  = {CNET},
  author   = {Fried, Ina}
}

@misc{noauthor_google_2006,
  title    = {Google acquires online word processor, {Writely}},
  url      = {https://venturebeat.com/2006/03/09/google-acquires-online-word-processor-writely/},
  abstract = {Elevate your enterprise data technology and strategy at Transform 2021. Google has acquired Upstartle, the Silicon Valley-based maker of online word processor Writely. It gives Google yet another tool in its kit of applications to take on Microsoft — and brush aside its dominance through the desktop. There are many similar products out there, in […]},
  language = {en-US},
  urldate  = {2021-06-04},
  journal  = {VentureBeat},
  month    = mar,
  year     = {2006}
}

@misc{chang_ehub_2005,
  title    = {{eHub} {Interviews} {Writely}},
  url      = {https://web.archive.org/web/20110722190058/http://emilychang.com/ehub/app/ehub-interviews-writely/},
  language = {English},
  urldate  = {2021-06-04},
  journal  = {eHub},
  author   = {Chang, Emily},
  month    = oct,
  year     = {2005}
}

@article{sun_real_2020,
  title    = {Real {Differences} between {OT} and {CRDT} under a {General} {Transformation} {Framework} for {Consistency} {Maintenance} in {Co}-{Editors}},
  volume   = {4},
  issn     = {2573-0142},
  url      = {https://dl.acm.org/doi/10.1145/3375186},
  doi      = {10.1145/3375186},
  abstract = {OT (Operational Transformation) was invented for supporting real-time co-editors in the late 1980s and has evolved to become a collection of core techniques widely used in today's working co-editors and adopted in major industrial products. CRDT (Commutative Replicated Data Type) for co-editors was first proposed around 2006, under the name of WOOT (WithOut Operational Transformation). Follow-up CRDT variations are commonly labeled as "post-OT" techniques capable of making concurrent operations natively commutativity in co-editors. On top of that, CRDT solutions have made broad claims of superiority over OT solutions, and routinely portrayed OT as an incorrect, complex and inefficient technique. Over one decade later, however, CRDT is rarely found in working co-editors, and OT remains the choice for building the vast majority of today's co-editors. Contradictions between the reality and CRDT's purported advantages have been the source of much confusion and debate in co-editing research and developer communities. Have the vast majority of co-editors been unfortunate in choosing the faulty and inferior OT, or those CRDT claims are false? What are the real differences between OT and CRDT for co-editors? What are the key factors and underlying reasons behind the choices between OT and CRDT in the real world? A thorough examination of these questions is relevant not only to researchers who are exploring the frontiers of co-editing technologies and systems, but also to practitioners who are seeking viable techniques to build real world applications. To seek truth from facts, we set out to conduct a comprehensive and critical review on representative OT and CRDT solutions and working co-editors based on them. From this work, we have made important discoveries about OT and CRDT, and revealed facts and evidences that refute CRDT claims over OT on all accounts. We report our discoveries in a series of articles and the current article is the first one in this series. In this paper, we present a general transformation framework for consistency maintenance in co-editors, which was distilled from dissecting and examining representative OT and CRDT solutions (and other alternative solutions) during this work, and report our discoveries under the guidance of this framework. In particular, we reveal that CRDT is like OT in following a general transformation approach, but achieves the same transformation indirectly, in contrast to OT direct transformation approach; and CRDT is not natively commutative for concurrent co-editing operations, but has to achieve the same OT commutativity indirectly as well, with consequential correctness and complexity issues. Uncovering the hidden transformation nature and demystifying the commutativity property of CRDT provides much-needed clarity about what CRDT really is and is not to co-editing, and serves as the foundation to explore the real differences between OT and CRDT in correctness, complexity, implementation, and real world applications, which are reported in follow-up articles. We hope discoveries from this work help clear up common misconceptions and confusions surrounding OT and CRDT, and accelerate progress in co-editing technology for real world applications.?},
  language = {en},
  number   = {GROUP},
  urldate  = {2021-06-04},
  journal  = {Proceedings of the ACM on Human-Computer Interaction},
  author   = {Sun, Chengzheng and Sun, David and Ng, Agustina and Cai, Weiwei and Cho, Bryden},
  month    = jan,
  year     = {2020},
  pages    = {1--26}
}
@inproceedings{shapiro_conflict-free_2011,
  address   = {Berlin, Heidelberg},
  series    = {Lecture {Notes} in {Computer} {Science}},
  title     = {Conflict-{Free} {Replicated} {Data} {Types}},
  isbn      = {9783642245503},
  doi       = {10.1007/978-3-642-24550-3_29},
  abstract  = {Replicating data under Eventual Consistency (EC) allows any replica to accept updates without remote synchronisation. This ensures performance and scalability in large-scale distributed systems (e.g., clouds). However, published EC approaches are ad-hoc and error-prone. Under a formal Strong Eventual Consistency (SEC) model, we study sufficient conditions for convergence. A data type that satisfies these conditions is called a Conflict-free Replicated Data Type (CRDT). Replicas of any CRDT are guaranteed to converge in a self-stabilising manner, despite any number of failures. This paper formalises two popular approaches (state- and operation-based) and their relevant sufficient conditions. We study a number of useful CRDTs, such as sets with clean semantics, supporting both add and remove operations, and consider in depth the more complex Graph data type. CRDT types can be composed to develop large-scale distributed applications, and have interesting theoretical properties.},
  language  = {en},
  booktitle = {Stabilization, {Safety}, and {Security} of {Distributed} {Systems}},
  publisher = {Springer},
  author    = {Shapiro, Marc and Preguiça, Nuno and Baquero, Carlos and Zawirski, Marek},
  editor    = {Défago, Xavier and Petit, Franck and Villain, Vincent},
  year      = {2011},
  keywords  = {Eventual Consistency ,  Replicated Shared Objects ,  Large-Scale Distributed Systems },
  pages     = {386--400}
}

@misc{noauthor_whats_nodate,
  title      = {What’s different about the new {Google} {Docs}: {Conflict} resolution},
  shorttitle = {What’s different about the new {Google} {Docs}},
  url        = {https://drive.googleblog.com/2010/09/whats-different-about-new-google-docs_22.html},
  abstract   = {News and notes from the Google Drive team},
  language   = {en},
  urldate    = {2021-06-04},
  journal    = {Google Drive Blog}
}

@misc{tools_2020_nodate,
  title    = {2020 {Tools} {Survey} {Results}},
  url      = {https://uxtools.co/survey-2020/},
  abstract = {See the most popular tools used by over 4,000 designers based on this annual survey.},
  language = {en-us},
  urldate  = {2021-06-05},
  author   = {Tools, U. X.}
}

@misc{wallace_how_nodate,
  title    = {How {Figma}’s multiplayer technology works},
  url      = {https://www.figma.com/blog/how-figmas-multiplayer-technology-works/},
  abstract = {A peek into the homegrown solution we built as the first design tool with live collaborative editing.},
  language = {en-US},
  urldate  = {2021-06-05},
  journal  = {Figma},
  author   = {Wallace, Evan}
}

@misc{noauthor_rethinking_nodate,
  title    = {Rethinking {Virtual} {Whiteboard} {\textbar} {Excalidraw} {Blog}},
  url      = {https://blog.excalidraw.com/rethinking-virtual-whiteboard/},
  abstract = {Excalidraw started as a virtual tool to draw diagrams but a lot of people started using it to replace physical whiteboards. In this post we’ll walk through many aspects of physical whiteboards that do not make sense to translate as is in the virtual world.},
  language = {en},
  urldate  = {2021-06-05}
}

@misc{noauthor_building_nodate,
  title    = {Building {Excalidraw}'s {P2P} {Collaboration} {Feature} {\textbar} {Excalidraw} {Blog}},
  url      = {https://blog.excalidraw.com/building-excalidraw-p2p-collaboration-feature/},
  abstract = {Excalidraw is a whiteboard tool that lets you easily sketch diagrams that have a hand-drawn feel to them. As tech companies started to institute mandatory work from home policies due to the COVID-19 pandemic, we realized that Excalidraw could be the perfect substitute for the whiteboard that is usually required for systems design interviews.},
  language = {en},
  urldate  = {2021-06-05}
}

@article{kleppmann_conflict-free_2017,
  title    = {A {Conflict}-{Free} {Replicated} {JSON} {Datatype}},
  volume   = {28},
  issn     = {1558-2183},
  doi      = {10.1109/TPDS.2017.2697382},
  abstract = {Many applications model their data in a general-purpose storage format such as JSON. This data structure is modified by the application as a result of user input. Such modifications are well understood if performed sequentially on a single copy of the data, but if the data is replicated and modified concurrently on multiple devices, it is unclear what the semantics should be. In this paper we present an algorithm and formal semantics for a JSON data structure that automatically resolves concurrent modifications such that no updates are lost, and such that all replicas converge towards the same state (a conflict-free replicated datatype or CRDT). It supports arbitrarily nested list and map types, which can be modified by insertion, deletion and assignment. The algorithm performs all merging client-side and does not depend on ordering guarantees from the network, making it suitable for deployment on mobile devices with poor network connectivity, in peer-to-peer networks, and in messaging systems with end-to-end encryption.},
  number   = {10},
  journal  = {IEEE Transactions on Parallel and Distributed Systems},
  author   = {Kleppmann, Martin and Beresford, Alastair R.},
  month    = oct,
  year     = {2017},
  keywords = {Data structures, Collaboration, Semantics, Registers, Servers, Data models, Mobile handsets, CRDTs, collaborative editing, P2P, JSON, optimistic replication, operational semantics, eventual consistency},
  pages    = {2733--2746}
}

@misc{smith_patterns_2009,
  title    = {Patterns - {WPF} {Apps} {With} {The} {Model}-{View}-{ViewModel} {Design} {Pattern}},
  url      = {https://docs.microsoft.com/en-us/archive/msdn-magazine/2009/february/patterns-wpf-apps-with-the-model-view-viewmodel-design-pattern},
  language = {en-us},
  urldate  = {2021-06-05},
  author   = {Smith, Josh},
  year     = {2009}
}


@misc{noauthor_javascript_nodate,
  title   = {javascript - {MVVM} architectural pattern for a {ReactJS} application},
  url     = {https://stackoverflow.com/questions/51506440/mvvm-architectural-pattern-for-a-reactjs-application},
  urldate = {2021-06-05},
  journal = {Stack Overflow}
}

@article{pautasso_microservices_2017,
  title      = {Microservices in {Practice}, {Part} 2: {Service} {Integration} and {Sustainability}},
  volume     = {34},
  issn       = {0740-7459, 1937-4194},
  shorttitle = {Microservices in {Practice}, {Part} 2},
  url        = {https://ieeexplore.ieee.org/document/7888407/},
  doi        = {10.1109/MS.2017.56},
  number     = {2},
  urldate    = {2021-06-05},
  journal    = {IEEE Software},
  author     = {Pautasso, Cesare and Zimmermann, Olaf and Amundsen, Mike and Lewis, James and Josuttis, Nicolai},
  month      = mar,
  year       = {2017},
  pages      = {97--104}
}

@misc{noauthor_why_nodate,
  title      = {Why did we build {React}? – {React} {Blog}},
  shorttitle = {Why did we build {React}?},
  url        = {https://reactjs.org/blog/2013/06/05/why-react.html},
  abstract   = {There are a lot of JavaScript MVC frameworks out there. Why did we build React
and why would you want to use it? React isn’t an MVC framework.  React is a library for building composable user interfaces. It encourages
the creation of reusable UI components which present data that changes over
time. React doesn’t use templates.  Traditionally, web application UIs are built using templates or HTML directives.
These templates dictate the full set of abstractions that you are allowed to use
to build…},
  language   = {en},
  urldate    = {2021-06-06}
}

@misc{noauthor_react_nodate,
  title    = {React – {A} {JavaScript} library for building user interfaces},
  url      = {https://reactjs.org/},
  abstract = {A JavaScript library for building user interfaces},
  language = {en},
  urldate  = {2021-06-06}
}

@misc{noauthor_introduction_nodate,
  title    = {Introduction {\textbar} {Vue}.js},
  url      = {https://v3.vuejs.org/guide/introduction.html},
  abstract = {Vue.js - The Progressive JavaScript Framework},
  urldate  = {2021-06-06}
}

@book{macrae_vue.js:_2018,
  address    = {Sebastopol, California},
  edition    = {First edition},
  title      = {Vue.js: up and running: building accessible and performant web apps},
  isbn       = {9781491997246},
  shorttitle = {Vue.js},
  abstract   = {Get a brisk introduction to building fast, interactive single-page web applications with Vue.js, the popular JavaScript framework that organizes and simplifies web development. With this practical guide, you'll quickly move from basics to custom components and advanced features, including JSX, the JavaScript syntax extension},
  publisher  = {O'Reilly Media},
  author     = {Macrae, Callum},
  year       = {2018},
  note       = {OCLC: on1002834117},
  keywords   = {Vue (Electronic resource), Vue (Electronic resource), JavaScript (Computer program language), Web site development, Web applications, Development, JavaScript (Computer program language), Web site development}
}

@misc{nov_26_2016_frameworks_nodate,
  title      = {Frameworks without the framework: why didn't we think of this sooner?},
  shorttitle = {Frameworks without the framework},
  url        = {https://svelte.dev/blog/frameworks-without-the-framework},
  language   = {en},
  urldate    = {2021-06-06},
  author     = {Nov 26 2016, Rich Harris Sat}
}

@misc{noauthor_compare_nodate,
  title    = {Compare npm downloads for react, vue and svelte - npmcharts 📈},
  url      = {https://npmcharts.com/compare/react,vue,svelte},
  abstract = {Weekly downloads - react: 10,156,798 (-6.7\%), vue: 2,398,427 (-0.5\%), svelte: 143,667 (-43.0\%)},
  language = {en},
  urldate  = {2021-06-06}
}

@misc{noauthor_npm_nodate,
  title    = {npm},
  url      = {https://www.npmjs.com/},
  language = {en},
  urldate  = {2021-06-06}
}

@misc{node.js_about_nodate,
  title    = {About},
  url      = {https://nodejs.org/en/about/},
  abstract = {Node.js® is a JavaScript runtime built on Chrome's V8 JavaScript engine.},
  language = {en},
  urldate  = {2021-06-06},
  journal  = {Node.js},
  author   = {{Node.js}}
}


@misc{metz_google_nodate,
  title    = {Google {Go} boldly goes where no code has gone before},
  url      = {https://www.theregister.com/2011/05/05/google_go/},
  abstract = {How to build all the Google stuff Google won't talk about},
  language = {en},
  urldate  = {2021-06-06},
  author   = {Metz, Cade}
}


@misc{noauthor_go_nodate,
  title    = {Go vs {Node} js - {Which} programs are fastest? {\textbar} {Computer} {Language} {Benchmarks} {Game}},
  url      = {https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/go-node.html},
  abstract = {Go Node js - Which programs are fastest?},
  urldate  = {2021-06-06}
}

@misc{noauthor_rust_nodate,
  title    = {Rust vs {Go} - {Which} programs are fastest? {\textbar} {Computer} {Language} {Benchmarks} {Game}},
  url      = {https://benchmarksgame-team.pages.debian.net/benchmarksgame/fastest/rust-go.html},
  abstract = {Rust Go - Which programs are fastest?},
  urldate  = {2021-06-06}
}

@misc{noauthor_benchmark:_2018,
  title      = {Benchmark: {MongoDB}, {PostgreSQL}, {OrientDB}, {Neo4j} and {ArangoDB}},
  shorttitle = {Benchmark},
  url        = {https://www.arangodb.com/2018/02/nosql-performance-benchmark-2018-mongodb-postgresql-orientdb-neo4j-arangodb/},
  abstract   = {This article is part of ArangoDB’s open-source performance benchmark series. This time we included MongoDB, PostgreSQL, OrienDB and Neo4j.},
  language   = {en-US},
  urldate    = {2021-06-06},
  journal    = {ArangoDB},
  month      = feb,
  year       = {2018}
}

@misc{noauthor_frequently_2016,
  title   = {Frequently {Asked} {Questions} · {The} {Rust} {Programming} {Language}},
  url     = {https://web.archive.org/web/20160609195720/https://www.rust-lang.org/faq.html#project},
  urldate = {2021-06-06},
  month   = jun,
  year    = {2016}
}

@misc{noauthor_postgresql_nodate,
  title    = {{PostgreSQL} vs {MySQL}},
  url      = {https://www.sumologic.com/blog/postgresql-vs-mysql/},
  abstract = {MySQL and PostgreSQL are two database management systems developed back in the mid 90’s and are still consistently rank among the top 5 most popular databases around.},
  language = {en-US},
  urldate  = {2021-06-06},
  journal  = {Sumo Logic}
}

@misc{noauthor_mysql_nodate,
  title    = {{MySQL} vs {PostgreSQL} -- {Choose} the {Right} {Database} for {Your} {Project}},
  url      = {https://developer.okta.com/blog/2019/07/19/mysql-vs-postgres},
  abstract = {Which is better? MySQL or Postgres? In this post we'll compare the strengths and weaknesses of each.},
  language = {en},
  urldate  = {2021-06-06},
  journal  = {Okta Developer}
}


@article{khushi_benchmarking_2015,
  title      = {Benchmarking {Database} {Performance} for {Genomic} {Data}: {DATABASE} {BENCHMARKING}},
  volume     = {116},
  issn       = {07302312},
  shorttitle = {Benchmarking {Database} {Performance} for {Genomic} {Data}},
  url        = {http://doi.wiley.com/10.1002/jcb.25049},
  doi        = {10.1002/jcb.25049},
  language   = {en},
  number     = {6},
  urldate    = {2021-06-06},
  journal    = {Journal of Cellular Biochemistry},
  author     = {Khushi, Matloob},
  month      = jun,
  year       = {2015},
  pages      = {877--883}
}

@misc{noauthor_1._2021,
  title    = {1. {What} {Is} {PostgreSQL}?},
  url      = {https://www.postgresql.org/docs/13/intro-whatis.html},
  abstract = {1.\&nbsp; What Is PostgreSQL? PostgreSQL is an object-relational database management system (ORDBMS) based on POSTGRES, Version 4.2, developed at the …},
  language = {en},
  urldate  = {2021-06-06},
  journal  = {PostgreSQL Documentation},
  month    = may,
  year     = {2021}
}

@misc{noauthor_postgresql:_2017,
  title      = {{PostgreSQL}: {History}},
  shorttitle = {{PostgreSQL}},
  url        = {https://web.archive.org/web/20170326020245/https://www.postgresql.org/about/history/#},
  urldate    = {2021-06-06},
  month      = mar,
  year       = {2017}
}

@misc{noauthor_what_nodate,
  title    = {What {Is} {MongoDB}?},
  url      = {https://www.mongodb.com/what-is-mongodb},
  abstract = {MongoDB is a document database with the scalability and flexibility that you want with the querying and indexing that you need.},
  language = {en-us},
  urldate  = {2021-06-06},
  journal  = {MongoDB}
}


@misc{noauthor_mongodb_nodate,
  title    = {{MongoDB} {System} {Properties}},
  url      = {https://db-engines.com/en/system/MongoDB},
  abstract = {Detailed overview of the characteristics of MongoDB},
  urldate  = {2021-06-06}
}

@misc{noauthor_mysql_nodate-1,
  title    = {{MySQL} {System} {Properties}},
  url      = {https://db-engines.com/en/system/MySQL},
  abstract = {Detailed overview of the characteristics of MySQL},
  urldate  = {2021-06-06}
}

@misc{noauthor_postgresql_nodate-1,
  title    = {{PostgreSQL} {System} {Properties}},
  url      = {https://db-engines.com/en/system/PostgreSQL},
  abstract = {Detailed overview of the characteristics of PostgreSQL},
  urldate  = {2021-06-06}
}

@misc{noauthor_faq_nodate,
  title   = {{FAQ} – {Redis}},
  url     = {https://redis.io/topics/faq},
  urldate = {2021-06-06}
}


@misc{noauthor_typed_nodate,
  title    = {Typed {JavaScript} at {Any} {Scale}.},
  url      = {https://www.typescriptlang.org/},
  abstract = {TypeScript extends JavaScript by adding types to the language. TypeScript speeds up your development experience by catching errors and providing fixes before you even run your code.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{staff_microsoft_2012,
  title    = {Microsoft augments {JavaScript} for large-scale development},
  url      = {https://www.infoworld.com/article/2614863/microsoft-augments-javascript-for-large-scale-development.html},
  abstract = {In an extension to JavaScript, Microsoft provides static typing, classes and modularization},
  language = {en},
  urldate  = {2021-06-07},
  journal  = {InfoWorld},
  author   = {staff, IDG News Service},
  month    = oct,
  year     = {2012}
}

@misc{noauthor_yarn:_2016,
  title      = {Yarn: {A} new package manager for {JavaScript}},
  shorttitle = {Yarn},
  url        = {https://engineering.fb.com/2016/10/11/web/yarn-a-new-package-manager-for-javascript/},
  abstract   = {In the JavaScript community, engineers share hundreds of thousands of pieces of code so we can avoid rewriting basic components, libraries, or frameworks of our own. Each piece of code may in turn depend on other pieces of code, and these dependencies are managed by package managers. The most popular JavaScript package manager is the [...]Read More...},
  language   = {en-US},
  urldate    = {2021-06-07},
  journal    = {Facebook Engineering},
  month      = oct,
  year       = {2016}
}

@misc{noauthor_next.js_nodate,
  title    = {Next.js by {Vercel} - {The} {React} {Framework}},
  url      = {https://nextjs.org},
  abstract = {Production grade React applications that scale. The world’s leading companies use Next.js by Vercel to build static and dynamic websites and web applications.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{noauthor_pmndrs/zustand_2021,
  title     = {pmndrs/zustand},
  copyright = {MIT License
        , 
      
    

        MIT License},
  url       = {https://github.com/pmndrs/zustand},
  abstract  = {🐻 Bear necessities for state management in React. Contribute to pmndrs/zustand development by creating an account on GitHub.},
  urldate   = {2021-06-07},
  publisher = {Poimandres},
  month     = jun,
  year      = {2021},
  note      = {original-date: 2019-04-09T09:10:06Z}
}

@misc{noauthor_tailwind_nodate,
  title    = {Tailwind {CSS} - {Rapidly} build modern websites without ever leaving your {HTML}.},
  url      = {https://tailwindcss.com/},
  abstract = {Documentation for the Tailwind CSS framework.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{noauthor_facebooks_nodate,
  title    = {Facebook's {CSS}-in-{JS} {Approach} - {Frank} {Yan} at {React} {Conf} 2019},
  url      = {https://www.infoq.com/news/2020/04/facebook-cssinjs-react-conf-2019/},
  abstract = {Frank Yan discussed at React Conf some of the technologies and strategies powering FB5, the new facebook.com, addressing topics such as Facebook’s approach to CSS-in-JS.},
  language = {en},
  urldate  = {2021-06-07},
  journal  = {InfoQ}
}

@misc{osmani_rendering_nodate,
  title    = {Rendering large lists with react-window},
  url      = {https://addyosmani.com/blog/react-window/},
  abstract = {If you use React and need to display large lists of data efficiently, you may be familiar with react-virtualized. It's a windowing library by Brian Vaugh...},
  language = {en},
  urldate  = {2021-06-07},
  author   = {Osmani, Addy}
}

@misc{ubl_introducing_nodate,
  title      = {Introducing {WebSockets}: {Bringing} {Sockets} to the {Web} - {HTML5} {Rocks}},
  shorttitle = {Introducing {WebSockets}},
  url        = {https://www.html5rocks.com/en/tutorials/websockets/basics/},
  abstract   = {Learn how to use WebSockets to add low latency bidirectional client-server communication to your web app.},
  language   = {en},
  urldate    = {2021-06-07},
  journal    = {HTML5 Rocks - A resource for open web HTML5 developers},
  author     = {Ubl, Malte and October 20th, Eiji Kitamura Published: and article, 2010 Comments: 0 Your browser may not support the functionality in this}
}

@misc{noauthor_gin-gonic/gin_2021,
  title     = {gin-gonic/gin},
  copyright = {MIT License
        , 
      
    

        MIT License},
  url       = {https://github.com/gin-gonic/gin},
  abstract  = {Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API with much better performance -- up to 40 times faster. If you need smashing performance, get yourself some Gin.},
  urldate   = {2021-06-07},
  publisher = {Gin-Gonic},
  month     = jun,
  year      = {2021},
  note      = {original-date: 2014-06-16T23:57:25Z},
  keywords  = {go, middleware, performance, framework, router, server, gin}
}


@misc{conroy_kyleconroy/sqlc_2021,
  title     = {kyleconroy/sqlc},
  copyright = {MIT License
        , 
      
    

        MIT License},
  url       = {https://github.com/kyleconroy/sqlc},
  abstract  = {Generate type safe Go from SQL. Contribute to kyleconroy/sqlc development by creating an account on GitHub.},
  urldate   = {2021-06-07},
  author    = {Conroy, Kyle},
  month     = jun,
  year      = {2021},
  note      = {original-date: 2019-06-21T21:11:35Z},
  keywords  = {mysql, go, sql, orm, code-generator, postgresql}
}


@misc{macneil_amacneil/dbmate_2021,
  title     = {amacneil/dbmate},
  copyright = {MIT License
        , 
      
    

        MIT License},
  url       = {https://github.com/amacneil/dbmate},
  abstract  = {:rocket: A lightweight, framework-agnostic database migration tool.},
  urldate   = {2021-06-07},
  author    = {Macneil, Adrian},
  month     = jun,
  year      = {2021},
  note      = {original-date: 2015-11-25T18:58:30Z},
  keywords  = {nodejs, mysql, python, docker, golang, migrations, sqlite, postgresql, migration, database-migrations, database-schema}
}


@misc{noauthor_container_nodate,
  title    = {Container {Runtime} with {Docker} {Engine} {\textbar} {Docker}},
  url      = {https://www.docker.com/products/container-runtime},
  abstract = {Learn about Docker Engine, the industry-leading container runtime that enables containerized applications to run anywhere consistently on any infrastructure.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{noauthor_overview_2021,
  title    = {Overview of {Docker} {Compose}},
  url      = {https://docs.docker.com/compose/},
  abstract = {Introduction and Overview of Compose},
  language = {en},
  urldate  = {2021-06-07},
  journal  = {Docker Documentation},
  month    = jun,
  year     = {2021}
}

@misc{noauthor_about_nodate,
  title   = {About - {Git}},
  url     = {https://git-scm.com/about/small-and-fast},
  urldate = {2021-06-07}
}

@misc{noauthor_git_nodate,
  title   = {Git - {A} {Short} {History} of {Git}},
  url     = {https://git-scm.com/book/en/v2/Getting-Started-A-Short-History-of-Git},
  urldate = {2021-06-07}
}

@misc{noauthor_visual_nodate,
  title    = {Visual {Studio} {Code} - {Code} {Editing}. {Redefined}},
  url      = {https://code.visualstudio.com/},
  abstract = {Visual Studio Code is a code editor redefined and optimized for building and debugging modern web and cloud applications.  Visual Studio Code is free and available on your favorite platform - Linux, macOS, and Windows.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{noauthor_datagrip:_nodate,
  title      = {{DataGrip}: {The} {Cross}-{Platform} {IDE} for {Databases} \& {SQL} by {JetBrains}},
  shorttitle = {{DataGrip}},
  url        = {https://www.jetbrains.com/datagrip/},
  abstract   = {A powerful IDE from JetBrains for SQL on macOS, Windows, and Linux.},
  language   = {en},
  urldate    = {2021-06-07},
  journal    = {JetBrains}
}


@misc{noauthor_xelatex_nodate,
  title    = {{XeLaTeX}},
  url      = {https://www.overleaf.com/learn/latex/XeLaTeX},
  abstract = {An online LaTeX editor that's easy to use. No installation, real-time collaboration, version control, hundreds of LaTeX templates, and more.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{noauthor_tikz_nodate,
  title    = {{TikZ} package},
  url      = {https://www.overleaf.com/learn/latex/TikZ_package},
  abstract = {An online LaTeX editor that's easy to use. No installation, real-time collaboration, version control, hundreds of LaTeX templates, and more.},
  language = {en},
  urldate  = {2021-06-07}
}

@misc{akulov_case_2020,
  title      = {Case study: {Analyzing} {Notion} app performance},
  shorttitle = {Case study},
  url        = {https://3perf.com/blog/notion/},
  abstract   = {How to make a React app load {\textasciitilde}30\% faster – by tuning some configs and delaying some scripts},
  urldate    = {2021-06-07},
  journal    = {PerfPerfPerf},
  author     = {Akulov, Ivan},
  month      = may,
  year       = {2020}
}


@misc{noauthor_cacheable_nodate,
  title      = {Cacheable - {MDN} {Web} {Docs} {Glossary}: {Definitions} of {Web}-related terms {\textbar} {MDN}},
  shorttitle = {Cacheable - {MDN} {Web} {Docs} {Glossary}},
  url        = {https://developer.mozilla.org/en-US/docs/Glossary/cacheable},
  abstract   = {A cacheable response is an HTTP response that can be cached, that is stored to be retrieved and used later, saving a new request to the server. Not all HTTP responses can be cached, these are the following constraints for an HTTP response to be cached:},
  language   = {en-US},
  urldate    = {2021-06-07}
}

@misc{noauthor_long_nodate,
  title     = {Long pages},
  copyright = {Creative Commons Attribution-ShareAlike License},
  url       = {https://en.wikipedia.org/wiki/Special:LongPages},
  language  = {en},
  urldate   = {2021-06-07},
  journal   = {Wikipedia}
}


@misc{noauthor_polyfill_nodate,
  title      = {Polyfill - {MDN} {Web} {Docs} {Glossary}: {Definitions} of {Web}-related terms {\textbar} {MDN}},
  shorttitle = {Polyfill - {MDN} {Web} {Docs} {Glossary}},
  url        = {https://developer.mozilla.org/en-US/docs/Glossary/Polyfill},
  abstract   = {A polyfill is a piece of code (usually JavaScript on the Web) used to provide modern functionality on older browsers that do not natively support it.},
  language   = {en-US},
  urldate    = {2021-06-07}
}

@misc{noauthor_airtable_nodate,
  title    = {Airtable {Pricing}, {Alternatives} \& {More} 2021 - {Capterra}},
  url      = {https://www.capterra.com/p/146652/Airtable/},
  abstract = {With the help of Capterra, learn about Airtable, its features, pricing information, popular comparisons to other Digital Asset Management products and more. Still not sure about Airtable? Check out alternatives and read real reviews from real users.},
  urldate  = {2021-06-07}
}